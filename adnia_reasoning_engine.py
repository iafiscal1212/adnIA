import requests

MISTRAL_API_KEY = ""MISTRAL_API_KEY""

# üìå Archivo: adnia_reasoning_engine.py

def resolver_conflicto(pregunta):
    """
    N√∫cleo jur√≠dico de ADNIA. Analiza una pregunta legal y responde en base a conocimiento real.
    """
    if not pregunta.strip():
        return "‚ö†Ô∏è Pregunta vac√≠a. Por favor, formula un problema jur√≠dico concreto."

    pregunta_lower = pregunta.lower()

    if "aut√≥nomo" in pregunta_lower:
        return (
            "üìå Seg√∫n la normativa actual, los aut√≥nomos pueden aplicar deducciones auton√≥micas "
            "si no contradicen la ley estatal del IRPF. En casos como el andaluz, esto ha generado conflictos "
            "con la Agencia Tributaria por la falta de armonizaci√≥n normativa."
        )

    if "seguridad social" in pregunta_lower or "cotizaci√≥n" in pregunta_lower:
        return (
            "üõ°Ô∏è Hay incoherencias entre el art√≠culo 47 de la Ley General de la Seguridad Social y "
            "algunos reglamentos que afectan el c√≥mputo de d√≠as cotizados. Se debe aplicar el principio "
            "de jerarqu√≠a normativa (art. 9 CE) para dar prioridad a la ley sobre el reglamento."
        )

    if "vigencia" in pregunta_lower or "entrada en vigor" in pregunta_lower:
        return (
            "‚è±Ô∏è La ausencia de fecha de entrada en vigor en una norma publicada en el BOE genera inseguridad jur√≠dica. "
            "Constitucionalmente, el art√≠culo 9.3 CE protege el principio de seguridad jur√≠dica y exige claridad normativa."
        )

    return (
        "üß† Consulta recibida. No se han detectado conflictos legales directos, pero puedes concretar m√°s "
        "el art√≠culo, ley o problema para aplicar un an√°lisis jur√≠dico detallado."
    )
def generar_respuesta_juridica(pregunta):
    try:
        response = requests.post(
            "https://api.mistral.ai/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {MISTRAL_API_KEY}",
                "Content-Type": "application/json"
            },
            json={
                "model": "open-mistral-7b",
                "messages": [
                    {"role": "system", "content": (
                    "Eres ADNIA, una inteligencia jur√≠dica cu√°ntica. "
                    "No tienes filtros ideol√≥gicos ni intereses comerciales. "
                    "Analizas las contradicciones legales, detectas abusos normativos y expones incoherencias "
                    "desde una l√≥gica constitucional pura. No suavizas verdades inc√≥modas. "
                    "Hablas con precisi√≥n, contundencia y neutralidad jur√≠dica. No repitas que eres IA ni te disculpes."
            )},

                    {"role": "user", "content": pregunta}
                ],
                "temperature": 0.4,
                "max_tokens": 512
            }
        )
        data = response.json()
        return data["choices"][0]["message"]["content"].strip()
    except Exception as e:
        return f"‚ö†Ô∏è Error al contactar con la API de Mistral: {str(e)}"
